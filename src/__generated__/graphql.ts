/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: any;
};

export type Event = {
  __typename?: 'Event';
  createdAt: Scalars['ISO8601DateTime'];
  description?: Maybe<Scalars['String']>;
  endsAt?: Maybe<Scalars['ISO8601DateTime']>;
  id: Scalars['ID'];
  startsAt?: Maybe<Scalars['ISO8601DateTime']>;
  title?: Maybe<Scalars['String']>;
  updatedAt: Scalars['ISO8601DateTime'];
};

/** Autogenerated input type of EventCreate */
export type EventCreateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  description: Scalars['String'];
  endsAt: Scalars['ISO8601DateTime'];
  startsAt: Scalars['ISO8601DateTime'];
  title: Scalars['String'];
};

/** Autogenerated return type of EventCreate. */
export type EventCreatePayload = {
  __typename?: 'EventCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  event: Event;
};

/** Autogenerated input type of EventDelete */
export type EventDeleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  id: Scalars['ID'];
};

/** Autogenerated return type of EventDelete. */
export type EventDeletePayload = {
  __typename?: 'EventDeletePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  event: Event;
};

/** Autogenerated input type of EventUpdate */
export type EventUpdateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  endsAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  id: Scalars['ID'];
  startsAt?: InputMaybe<Scalars['ISO8601DateTime']>;
  title?: InputMaybe<Scalars['String']>;
};

/** Autogenerated return type of EventUpdate. */
export type EventUpdatePayload = {
  __typename?: 'EventUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  event: Event;
};

export type Mutation = {
  __typename?: 'Mutation';
  /** Creates a new event */
  eventCreate?: Maybe<EventCreatePayload>;
  /** Deletes a event by ID */
  eventDelete?: Maybe<EventDeletePayload>;
  /** Updates a event by id */
  eventUpdate?: Maybe<EventUpdatePayload>;
};


export type MutationEventCreateArgs = {
  input: EventCreateInput;
};


export type MutationEventDeleteArgs = {
  input: EventDeleteInput;
};


export type MutationEventUpdateArgs = {
  input: EventUpdateInput;
};

export type Query = {
  __typename?: 'Query';
  /** Return a list of events */
  events: Array<Event>;
  /** An example field added by the generator */
  testField: Scalars['String'];
};

export type GetEventsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetEventsQuery = { __typename?: 'Query', events: Array<{ __typename?: 'Event', id: string, title?: string | null, description?: string | null, startsAt?: any | null, endsAt?: any | null }> };


export const GetEventsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetEvents"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"events"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"startsAt"}},{"kind":"Field","name":{"kind":"Name","value":"endsAt"}}]}}]}}]} as unknown as DocumentNode<GetEventsQuery, GetEventsQueryVariables>;